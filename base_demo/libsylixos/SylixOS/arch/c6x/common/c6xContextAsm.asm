;/*********************************************************************************************************
;**
;**                                    中国软件开源组织
;**
;**                                   嵌入式实时操作系统
;**
;**                                       SylixOS(TM)
;**
;**                               Copyright  All Rights Reserved
;**
;**--------------文件信息--------------------------------------------------------------------------------
;**
;** 文   件   名: c6xContextAsm.S
;**
;** 创   建   人: Jiao.JinXing (焦进星)
;**
;** 文件创建日期: 2017 年 03 月 17 日
;**
;** 描        述: c6x 体系构架上下文切换.
;*********************************************************************************************************/

    .include "c6xContextAsmInc.asm"

    .ref    _SchedSwp
    .ref    _SchedCrSwp

    .global archTaskCtxInit
    .global archTaskCtxStart
    .global archTaskCtxSwitch
    .global archCrtCtxSwitch
    .global archIntCtxLoad
    .global archSigCtxSave
    .global archSigCtxLoad

    .sect .text

;/*********************************************************************************************************
;  当前 CPU 开始运行多任务执行
;  参数(A4 寄存器)为当前 CPU 控制块
;*********************************************************************************************************/

archTaskCtxStart: .asmfunc
    LDW     *+A4(0) , A1                                                ;/*  获取当前 TCB 的 REG_CTX 地址*/
    NOP     4
    RESTORE_SMALL_REG_CTX                                               ;/*  恢复小寄存器上下文          */
    .endasmfunc

;/*********************************************************************************************************
;  线程切换 
;  参数(A4 寄存器)为当前 CPU 控制块
;*********************************************************************************************************/

archTaskCtxSwitch: .asmfunc
    LDW     *+A4(0) , A1                                                ;/*  获取当前 TCB 的 REG_CTX 地址*/
    NOP     4

    SAVE_SMALL_REG_CTX                                                  ;/*  保存小寄存器上下文          */

    MV      A4 , A10                                                    ;/*  A10 暂存 A4                 */
    B       _SchedSwp                                                   ;/*  _SchedSwp();                */
    ADDKPC  _SchedSwpRet , B3 , 4
_SchedSwpRet:

    LDW     *+A10(0) , A1                                               ;/*  获取当前 TCB 的 REG_CTX 地址*/
    NOP     4

    LDW     *+A1(0) , A2                                                ;/*  获得上下文类型              */
    NOP     4
    [A2]    BNOP  _RestoreBigCtx , 5

    RESTORE_SMALL_REG_CTX                                               ;/*  恢复小寄存器上下文          */

_RestoreBigCtx:
    RESTORE_BIG_REG_CTX                                                 ;/*  恢复大寄存器上下文          */
    .endasmfunc

;/*********************************************************************************************************
;  协程切换 
;  参数(A4 寄存器)为当前 CPU 控制块
;*********************************************************************************************************/

archCrtCtxSwitch: .asmfunc
    LDW     *+A4(8) , A1                                                ;/*  获取当前 CCB 的 REG_CTX 地址*/
    NOP     4

    SAVE_SMALL_REG_CTX                                                  ;/*  保存小寄存器上下文          */

    MV      A4 , A10                                                    ;/*  A10 暂存 A4                 */
    B       _SchedCrSwp                                                 ;/*  _SchedCrSwp();              */
    ADDKPC  _SchedCrSwpRet , B3 , 4
_SchedCrSwpRet:

    LDW     *+A10(8) , A1                                               ;/*  获取当前 CCB 的 REG_CTX 地址*/
    NOP     4

    RESTORE_SMALL_REG_CTX                                               ;/*  恢复小寄存器上下文          */
    .endasmfunc

;/*********************************************************************************************************
;  中断返回时, 线程装载
;  参数(A4 寄存器)为当前 CPU 控制块
;*********************************************************************************************************/

archIntCtxLoad: .asmfunc
    LDW     *+A4(0) , A1                                                ;/*  获取当前 TCB 的 REG_CTX 地址*/
    NOP     4

    LDW     *+A1(0) , A2                                                ;/*  获得上下文类型              */
    NOP     4
    [A2]    BNOP  _RestoreBigCtx , 5                                    ;/*  跳到恢复大寄存器上下文      */

    RESTORE_SMALL_REG_CTX                                               ;/*  恢复小寄存器上下文          */
    .endasmfunc

;/*********************************************************************************************************
;  信号上下文保存
;  参数1(A4 寄存器) 为 ARCH_REG_CTX 地址
;*********************************************************************************************************/

archSigCtxSave: .asmfunc
    MV      A4 , A1

    MVK     0  , A0
    STW     A0 , *A1++(8)                                               ;/*  小寄存器上下文类型          */

    ADD     8  , A1 , B1                                                ;/*  B1 与 A1 错开 8 个字节      */

    STDW    A15:A14 , *A1++[2]                                          ;/*  保存 A15:A14                */
 || STDW    B15:B14 , *B1++[2]                                          ;/*  保存 B15:B14                */

    STDW    A13:A12 , *A1++[2]                                          ;/*  保存 A13:A12                */
 || STDW    B13:B12 , *B1++[2]                                          ;/*  保存 B13:B12                */

    STDW    A11:A10 , *A1++[2]                                          ;/*  保存 A11:A10                */
 || STDW    B11:B10 , *B1++[2]                                          ;/*  保存 B11:B10                */

    STDW    A5:A4 , *A1++[2]                                            ;/*  保存 A5:A4                  */

    MVC     CSR  , B9
    STW     B9   , *B1++                                                ;/*  CSR                         */
 || MVC     AMR  , B8
    STW     B8   , *B1++                                                ;/*  AMR                         */
 || MVC     GFPGFR, B7
    STW     B7   , *B1++                                                ;/*  GFPGFR                      */

    STW     B3   , *B1++(8)                                             ;/*  B3 代替 IRP 保存            */

    .if (.TMS320C6740)
    MVC     FMCR , B24
    STW     B24  , *B1++                                                ;/*  FMCR                        */
 || MVC     FAUCR, B23
    STW     B23  , *B1++                                                ;/*  FAUCR                       */
 || MVC     FADCR, B22
    STW     B22  , *B1++                                                ;/*  FADCR                       */
    .else
    ADDK    +12  , B1
    .endif

    MVC     SSR  , B21
    STW     B21  , *B1++                                                ;/*  SSR                         */
 || MVC     RILC , B20
    NOP
    STW     B20  , *B1++                                                ;/*  RILC                        */
 || MVC     ITSR , B19
    STW     B19  , *B1++                                                ;/*  ITSR                        */
 || MVC     GPLYB, B18
    STW     B18  , *B1++                                                ;/*  GPLYB                       */
 || MVC     GPLYA, B17
    STW     B17  , *B1++                                                ;/*  GPLYA                       */
 || MVC     ILC  , B16
    NOP
    STW     B16  , *B1++                                                ;/*  ILC                         */

    BNOP    B3   , 4
    MVK     0    , A4
    .endasmfunc

;/*********************************************************************************************************
;  信号上下文返回
;  参数1(A4 寄存器) 为 ARCH_REG_CTX 地址
;*********************************************************************************************************/

archSigCtxLoad: .asmfunc
    MV      A4 , A1

    LDW     *+A1(0) , A2                                                ;/*  获得上下文类型              */
    NOP     4
    [A2]    BNOP  _RestoreBigCtx , 5                                    ;/*  跳到恢复大寄存器上下文      */

    RESTORE_SMALL_REG_CTX                                               ;/*  恢复小寄存器上下文          */
    .endasmfunc

;/*********************************************************************************************************
;  END
;*********************************************************************************************************/
